# .github/workflows/ci-cd.yml
# This GitHub Actions workflow automates the CI/CD process for the Cervical AI Screening application.

name: CI-CD Pipeline

on:
  push:
    branches: [ "main" ] # Triggers the workflow on push events to the main branch
  pull_request:
    branches: [ "main" ] # Also triggers on pull requests to main for CI checks

jobs:
  build:
    # The 'build' job runs on an Ubuntu runner
    runs-on: ubuntu-latest
    
    steps:
    # Step 1: Check out the repository code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    # Step 3: Install project dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Step 4 (Optional but recommended): Add linting and testing steps here
    # For example, using flake8 for linting:
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  deploy:
    # The 'deploy' job also runs on an Ubuntu runner
    runs-on: ubuntu-latest
    # This job depends on the 'build' job completing successfully
    needs: build
    # Only run this job if the push is to the 'main' branch
    if: github.ref == 'refs/heads/main'
    
    steps:
    # Step 1: Trigger deployment on Render using a deploy hook
    - name: Trigger Render Deployment
      run: curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}
      # The RENDER_DEPLOY_HOOK_URL must be configured as a secret in your GitHub repository settings.
      # This URL is provided by Render in your service's settings page.